setwd("E:/my_paper/code_materials/zhang_lengersdorff_mikus_glaescher_lamm_rl_fitfalls_suggestions")
library(rstan)
library(ggplot2)
library(R.matlab)
load('data/PPC/rl_mp.RData')
sz <- dim(rl_mp)
nSubjects <- sz[1]
nTrials   <- sz[2]
dataList <- list(nSubjects=nSubjects,
nTrials=nTrials,
choice=rl_mp[,,1],
reward=rl_mp[,,2])
rstan_options(auto_write = TRUE)
options(mc.cores = 2)
modelFile <- 'code/rl_ppc.stan'
nIter     <- 2000
nChains   <- 4
nWarmup   <- floor(nIter/2)
nThin     <- 1
fit_rl <- stan(modelFile,
data    = dataList,
chains  = 1,
iter    = 1,
warmup  = 0,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
cat("Estimating", modelFile, "model... \n")
startTime = Sys.time(); print(startTime)
cat("Calling", nChains, "simulations in Stan... \n")
fit_rl <- stan(modelFile,
data    = dataList,
chains  = nChains,
iter    = nIter,
warmup  = nWarmup,
thin    = nThin,
init    = "random",
seed    = 1450154637
)
cat("Finishing", modelFile, "model simulation ... \n")
endTime = Sys.time(); print(endTime)
cat("It took",as.character.Date(endTime - startTime), "\n")
? dnorm
? binomial
? gamma
? dnorm
dnorm(x, mean = 2, sd = 5)
x = -20:20
x
?seq
x = seq(from=-20, to =20, by=0.1)
x
x = seq(from=-20, to =20, by=0.1)
length(x)
dnorm(x, mean = 2, sd = 5)
y = dnorm(x, mean = 2, sd = 5)
x = seq(from=-20, to =20, by=0.1)
y = dnorm(x, mean = 2, sd = 5)
plot(x,y)
plot(x,y, style = 'l')
plot(x,y, type = 'l')
plot(x,y, type = 'l')
x = seq(from=-20, to =20, by=0.1)
y = dnorm(x, mean = 2, sd = 5)
plot(x,y, type = 'l')
y_cdf = pnorm(x, 2, 5)
plot(x,y_cdf, type = 'l')
getwd()
R.version
R.version
sessionInfo()
getwd()
dir()
dir()
ls()
a = 4
a
ls()
ls()
print('hello world')
cat("Hello", "World")
paste0('C:/', 'Group1')
paste('C:/', 'Group1')
paste0('C:/', 'Group1')
paste('C:/', 'Group1')
paste('C:/', 'Group1', 'Sub1')
paste('C:/', 'Group1', 'Sub1', sep = ',')
paste('C:/', 'Group1', 'Sub1', sep = '.')
paste('C:/', 'Group1', 'Sub1', sep = ';')
paste('C:/', 'Group1', 'Sub1', sep = '')
paste0('C:/', 'Group1', 'Sub1', sep = '')
? paste0
paste0(1:12)
lS()
LS
ls
ls()
ls()
rm(list = ls())
a  =1
b=2
ls()
rm(a)
ls()
clear a
? mean
rm(list = ls())
a = 'UKE'
class(a)
class(T)
class(TURE)
class(TRUE)
class(NA)
class(1)
class(as.integer(1))
class()
a =4
a1 <- 5
a2 <- as.integer(a1)
class(a1)
class(a2)
b1 <- 'Hello World!'
b2 <- "Hello World!"
class(b1)
class(b2)
'Hello UKE"s World!'
"Hello UKE's World!"
c1 <- T; c2 <- TRUE; c3 <- F; c4 <- FALSE
class(c1)
f <- factor(letters[c(1, 1, 2, 2, 3:10)])
class(f)
f
v1 <- 1:12
v2 <- c(2,4,1,5,1,6, 13:18)
v3 <- c(rep('aa',4), rep('bb',4), rep('cc',4))
V1
v1
v2
v3
class(v1)
class(v2)
class(v3)
1:10
class(1:10)
v1
m1 <- matrix(v1, nrow=3, ncol=4)
m1
m2 <- matrix(v1, nrow=3, ncol=4, byrow = T)
2
m2
arr <- array(v1, dim=c(2,2,3))
arr
class(m1)
class(arr)
df <- data.frame(v1=v1, v2=v2, v3=v3, f=f)
df
class(df)
str(df)
df$v1
df$v2
class(df$v1)
class(df$v2)
a = c(44,55,66)
a
class(1)
a[1]
a[as.integer(1)]
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =", , ", t <= 1/3. \n")
} else if () {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1)
t <- runif(1)
t <- runif(1)
t
t <- runif(1)
t <- runif(1)
t <- runif(1)
t <- runif(1)
t
t <- runif(1)
t <- runif(1); t
t <- runif(1); t
t <- runif(1); t
t <- runif(1)
(t <- runif(1))
(t <- runif(1))
(t <- runif(1))
(t <- runif(1))
(t <- runif(1))
(t <- runif(1))
(t <- runif(1))
(t <- runif(1))
if (t <= 1/3) {
cat("t =", , ", t <= 1/3. \n")
} else if () {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t = .1
t
t <= 1/3
cat("t =", , ", t <= 1/3. \n")
cat("t =", t, ", t <= 1/3. \n")
"t ="
", t <= 1/3. \n"
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
t <- runif(1) # random number between 0 and 1
if (t <= 1/3) {
cat("t =",t , ", t <= 1/3. \n")
} else if (t > 2/3) {
cat("t =", t, ", t > 2/3. \n")
} else {
cat("t =", t, ", 1/3 < t <= 2/3. \n")
}
print('a')
cat('a')
tmp = print('a')
tmp
tmp2= cat('a')
tmp2
s= 1;cat('running analysis of s = ', s)
s= 1;print('running analysis of s = ', s)
s= 1;print(c('running analysis of s = ', s))
month_name <- format(ISOdate(2019,1:12,1),"%B")
month_name
for (j in 1:length(month_name) ) {
cat()
}
length(month_name)
1:length(month_name)
month_name[1]
month_name[2]
month_name[3]
for (j in 1:length(month_name) ) {
cat('This month is', month_name[j] )
}
month_name <- format(ISOdate(2019,1:12,1),"%B")
for (j in 1:length(month_name) ) {
cat('This month is', month_name[j], '. \n' )
}
month_name <- format(ISOdate(2019,1:12,1),"%B")
for (j in 1:length(month_name) ) {
cat('This month is', month_name[j], '. \n' )
}
month_name <- format(ISOdate(2019,1:12,1),"%B")
for (j in 1:length(month_name) ) {
cat('This month is', month_name[j], '\n' )
}
my_mean <- function(x) {
x_bar <- sum(x, na.rm = T) / length(na.omit(x))
return(x_bar)
}
ls()
rm(list = ls())
ls()
my_mean <- function(x) {
x_bar <- sum(x, na.rm = T) / length(na.omit(x))
return(x_bar)
}
ls()
a = 1:20
a
a[3] = NA
a
mean(a)
mean(a,na.rm = T)
my_mean(a)
all.equal(mean(a,na.rm = T), my_mean(a))
mean(a)
my.mean.cauculaiton.2020.Jan <- function(x) {
x_bar <- sum(x, na.rm = T) / length(na.omit(x))
return(x_bar)
}
ls()
my.mean.cauculaiton.2020.Jan(a)
library(acepack)
detach("package:acepack", unload = TRUE)
library()
data_dir = ('_data/RL_raw_data/sub01/raw_data_sub01.txt')
data = read.table(data_dir, header = T, sep = ",")
class(data)
head(data)
head(data, 10)
tail(data)
tail(data, 10)
sum(complete.cases(data))
dim(data)
data = data[complete.cases(data),]
dim(data[complete.cases(data),])
ns = 10
data_dir = '_data/RL_raw_data'
rawdata = c()
class(rawdata)
file.path('a','b')
file.path('C:/','mydata')
file.path('C:','mydata')
ns = 10
data_dir = '_data/RL_raw_data'
rawdata = c()
for (s in 1:ns) {
sub_file = file.path(data_dir, sprintf('sub%02i/raw_data_sub%02i.txt',s,s))
sub_data = read.table(sub_file, header = T, sep = ",")
rawdata = rbind(rawdata, sub_data)
}
dim(rawdata)
s = 1
sub_file = file.path(data_dir, sprintf('sub%02i/raw_data_sub%02i.txt',s,s))
sub_file
s =2
sub_file = file.path(data_dir, sprintf('sub%02i/raw_data_sub%02i.txt',s,s))
sub_file
s=1;sprintf('sub%02i/raw_data_sub%02i.txt',s,s)
s=2;sprintf('sub%02i/raw_data_sub%02i.txt',s,s)
s=3;sprintf('sub%02i/raw_data_sub%02i.txt',s,s)
s=3;sprintf('sub%i/raw_data_sub%02i.txt',s,s)
s=3;sprintf('sub%03i/raw_data_sub%02i.txt',s,s)
s=3;sprintf('sub_%s/raw_data_sub%02i.txt',s,s)
s=3;sprintf('sub_%s/raw_data_sub%02i.txt','UKE',s)
s=3;sprintf('sub_%i/raw_data_sub%02i.txt','UKE',s)
s=3;sprintf('sub_%f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%2.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%02.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%5.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%6.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%05.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%005.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%006.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%08.3f/raw_data_sub%02i.txt',2.2,s)
s=3;sprintf('sub_%08.3f/raw_data_sub%02i.txt',2.2,s)
dim(rawdata)
sum(complete.cases(rawdata))
rawdata = rawdata[complete.cases(rawdata),]
dim(rawdata)
str(rawdata)
rawdata$choice == rawdata$correct
(rawdata$choice == rawdata$correct) * 1.0
TRUE * 1.0
FALSE * 1.0
TRUE * 1
FALSE * 1
str(rawdata)
rawdata$accuracy = (rawdata$choice == rawdata$correct) * 1.0
str(rawdata)
aggregate(rawdata$accuracy, by = list(rawdata$subjID), mean)
aggregate(rawdata$accuracy, by = list(rawdata$subjID), mean)[,2]
aggregate(rawdata$accuracy, by = list(rawdata$subjID), sum()[,2]
aggregate(rawdata$accuracy, by = list(rawdata$subjID), sum)[,2]
aggregate(rawdata$accuracy, by = list(rawdata$subjID), length)[,2]
aa = aggregate(rawdata$accuracy, by = list(rawdata$subjID), sum)[,2]
ss = aggregate(rawdata$accuracy, by = list(rawdata$subjID), length)[,2]
acc = aggregate(rawdata$accuracy, by = list(rawdata$subjID), mean)[,2]
all.equal(aa/ss, acc)
(aa/ss == acc)
aggregate(rawdata$accuracy, by = list(rawdata$subjID, rawdata$trialID), mean)[,2]
? dnorm
x = -5:5
x
x
y  =dnorm(x)
#plot(x,y)
x = -5:5
y  =dnorm(x)
plot(x,y)
plot(x,y, type = 'l')
?seq
x=seq(-5,5,length.out = 500)
y  =dnorm(x)
plot(x,y, type = 'l')
x=seq(-5,5,length.out = 500)
x
y  =dnorm(x)
y  =dnorm(x)
plot(x,y, type = 'l')
x=seq(-5,5,length.out = 500)
y  =dnorm(x)
plot(x,y, type = 'l')
y1 =pnorm(x)
plot(x,y1, type = 'l')
x = rnorm(1000)
hist(x)
x = rnorm(1000, 5, 2)
hist(x)
runif(1)
runif(10)
rbind(c(1,2,3), c(4,5,6))
sum(1:6)
m = rbind(c(1,2,3), c(4,5,6))
sum(m)
